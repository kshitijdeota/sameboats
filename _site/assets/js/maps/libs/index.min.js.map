{"version":3,"sources":["libs/index.js"],"names":["root","factory","define","amd","module","exports","d3","tip","this","direction","offset","html","node","initNode","svg","point","target","vis","el","tagName","toLowerCase","ownerSVGElement","createSVGPoint","document","body","appendChild","show","args","Array","prototype","slice","call","arguments","length","SVGElement","pop","coords","content","apply","poffset","dir","nodel","getNodeEl","i","directions","scrollTop","documentElement","scrollLeft","style","opacity","pointer-events","classed","direction_callbacks","get","top","left","hide","attr","n","v","selection","functor","destroy","remove","map","bbox","getScreenBBox","y","offsetHeight","x","offsetWidth","s","e","w","nw","ne","sw","se","keys","select","createElement","position","box-sizing","targetel","event","getScreenCTM","parentNode","matrix","tbbox","getBBox","width","height","matrixTransform"],"mappings":"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","file":"../../libs/index.min.js","sourcesContent":["// d3.tip\n// Copyright (c) 2013 Justin Palmer\n//\n// Tooltips for d3.js SVG visualizations\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module with d3 as a dependency.\n    define(['d3'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS\n    module.exports = function(d3) {\n      d3.tip = factory(d3)\n      return d3.tip\n    }\n  } else {\n    // Browser global.\n    root.d3.tip = factory(root.d3)\n  }\n}(this, function (d3) {\n\n  // Public - contructs a new tooltip\n  //\n  // Returns a tip\n  return function() {\n    var direction = d3_tip_direction,\n        offset    = d3_tip_offset,\n        html      = d3_tip_html,\n        node      = initNode(),\n        svg       = null,\n        point     = null,\n        target    = null\n\n    function tip(vis) {\n      svg = getSVGNode(vis)\n      point = svg.createSVGPoint()\n      document.body.appendChild(node)\n    }\n\n    // Public - show the tooltip on the screen\n    //\n    // Returns a tip\n    tip.show = function() {\n      var args = Array.prototype.slice.call(arguments)\n      if(args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n      var content = html.apply(this, args),\n          poffset = offset.apply(this, args),\n          dir     = direction.apply(this, args),\n          nodel   = getNodeEl(),\n          i       = directions.length,\n          coords,\n          scrollTop  = document.documentElement.scrollTop || document.body.scrollTop,\n          scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft\n\n      nodel.html(content)\n        .style({ opacity: 1, 'pointer-events': 'all' })\n\n      while(i--) nodel.classed(directions[i], false)\n      coords = direction_callbacks.get(dir).apply(this)\n      nodel.classed(dir, true).style({\n        top: (coords.top +  poffset[0]) + scrollTop + 'px',\n        left: (coords.left + poffset[1]) + scrollLeft + 'px'\n      })\n\n      return tip\n    }\n\n    // Public - hide the tooltip\n    //\n    // Returns a tip\n    tip.hide = function() {\n      var nodel = getNodeEl()\n      nodel.style({ opacity: 0, 'pointer-events': 'none' })\n      return tip\n    }\n\n    // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.\n    //\n    // n - name of the attribute\n    // v - value of the attribute\n    //\n    // Returns tip or attribute value\n    tip.attr = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().attr(n)\n      } else {\n        var args =  Array.prototype.slice.call(arguments)\n        d3.selection.prototype.attr.apply(getNodeEl(), args)\n      }\n\n      return tip\n    }\n\n    // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.\n    //\n    // n - name of the property\n    // v - value of the property\n    //\n    // Returns tip or style property value\n    tip.style = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().style(n)\n      } else {\n        var args =  Array.prototype.slice.call(arguments)\n        d3.selection.prototype.style.apply(getNodeEl(), args)\n      }\n\n      return tip\n    }\n\n    // Public: Set or get the direction of the tooltip\n    //\n    // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n    //     sw(southwest), ne(northeast) or se(southeast)\n    //\n    // Returns tip or direction\n    tip.direction = function(v) {\n      if (!arguments.length) return direction\n      direction = v == null ? v : d3.functor(v)\n\n      return tip\n    }\n\n    // Public: Sets or gets the offset of the tip\n    //\n    // v - Array of [x, y] offset\n    //\n    // Returns offset or\n    tip.offset = function(v) {\n      if (!arguments.length) return offset\n      offset = v == null ? v : d3.functor(v)\n\n      return tip\n    }\n\n    // Public: sets or gets the html value of the tooltip\n    //\n    // v - String value of the tip\n    //\n    // Returns html value or tip\n    tip.html = function(v) {\n      if (!arguments.length) return html\n      html = v == null ? v : d3.functor(v)\n\n      return tip\n    }\n\n    // Public: destroys the tooltip and removes it from the DOM\n    //\n    // Returns a tip\n    tip.destroy = function() {\n      if(node) {\n        getNodeEl().remove();\n        node = null;\n      }\n      return tip;\n    }\n\n    function d3_tip_direction() { return 'n' }\n    function d3_tip_offset() { return [0, 0] }\n    function d3_tip_html() { return ' ' }\n\n    var direction_callbacks = d3.map({\n      n:  direction_n,\n      s:  direction_s,\n      e:  direction_e,\n      w:  direction_w,\n      nw: direction_nw,\n      ne: direction_ne,\n      sw: direction_sw,\n      se: direction_se\n    }),\n\n    directions = direction_callbacks.keys()\n\n    function direction_n() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.n.y - node.offsetHeight,\n        left: bbox.n.x - node.offsetWidth / 2\n      }\n    }\n\n    function direction_s() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.s.y,\n        left: bbox.s.x - node.offsetWidth / 2\n      }\n    }\n\n    function direction_e() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.e.y - node.offsetHeight / 2,\n        left: bbox.e.x\n      }\n    }\n\n    function direction_w() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.w.y - node.offsetHeight / 2,\n        left: bbox.w.x - node.offsetWidth\n      }\n    }\n\n    function direction_nw() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.nw.y - node.offsetHeight,\n        left: bbox.nw.x - node.offsetWidth\n      }\n    }\n\n    function direction_ne() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.ne.y - node.offsetHeight,\n        left: bbox.ne.x\n      }\n    }\n\n    function direction_sw() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.sw.y,\n        left: bbox.sw.x - node.offsetWidth\n      }\n    }\n\n    function direction_se() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.se.y,\n        left: bbox.e.x\n      }\n    }\n\n    function initNode() {\n      var node = d3.select(document.createElement('div'))\n      node.style({\n        position: 'absolute',\n        top: 0,\n        opacity: 0,\n        'pointer-events': 'none',\n        'box-sizing': 'border-box'\n      })\n\n      return node.node()\n    }\n\n    function getSVGNode(el) {\n      el = el.node()\n      if(el.tagName.toLowerCase() === 'svg')\n        return el\n\n      return el.ownerSVGElement\n    }\n\n    function getNodeEl() {\n      if(node === null) {\n        node = initNode();\n        // re-add node to DOM\n        document.body.appendChild(node);\n      };\n      return d3.select(node);\n    }\n\n    // Private - gets the screen coordinates of a shape\n    //\n    // Given a shape on the screen, will return an SVGPoint for the directions\n    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),\n    // sw(southwest).\n    //\n    //    +-+-+\n    //    |   |\n    //    +   +\n    //    |   |\n    //    +-+-+\n    //\n    // Returns an Object {n, s, e, w, nw, sw, ne, se}\n    function getScreenBBox() {\n      var targetel   = target || d3.event.target;\n\n      while ('undefined' === typeof targetel.getScreenCTM && 'undefined' === targetel.parentNode) {\n          targetel = targetel.parentNode;\n      }\n\n      var bbox       = {},\n          matrix     = targetel.getScreenCTM(),\n          tbbox      = targetel.getBBox(),\n          width      = tbbox.width,\n          height     = tbbox.height,\n          x          = tbbox.x,\n          y          = tbbox.y\n\n      point.x = x\n      point.y = y\n      bbox.nw = point.matrixTransform(matrix)\n      point.x += width\n      bbox.ne = point.matrixTransform(matrix)\n      point.y += height\n      bbox.se = point.matrixTransform(matrix)\n      point.x -= width\n      bbox.sw = point.matrixTransform(matrix)\n      point.y -= height / 2\n      bbox.w  = point.matrixTransform(matrix)\n      point.x += width\n      bbox.e = point.matrixTransform(matrix)\n      point.x -= width / 2\n      point.y -= height / 2\n      bbox.n = point.matrixTransform(matrix)\n      point.y += height\n      bbox.s = point.matrixTransform(matrix)\n\n      return bbox\n    }\n\n    return tip\n  };\n\n}));\n"]}