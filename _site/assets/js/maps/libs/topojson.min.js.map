{"version":3,"sources":["libs/topojson.js"],"names":["topojson","version","mesh","topology","object","meshArcs","apply","this","arguments","merge","mergeArcs","feature","o","type","features","geometries","map","neighbors","objects","indexesByArc","line","arcs","i","forEach","a","push","polygon","arc","geometryType","LineString","MultiLineString","Polygon","MultiPolygon","geometry","indexes","m","length","j","k","n","ij","ik","bisect","splice","presimplify","triangleArea","absolute","transformAbsolute","transform","relative","noop","x0","y0","kx","scale","ky","dx","translate","dy","point","x1","y1","transformRelative","heap","array","size","up","parent","compareArea","_","down","r","l","child","pop","removed","remove","minAreaHeap","cartesianTriangleArea","update","triangle","p","triangles","maxArea","Infinity","slice","previous","next","stitchArcs","stitchedArcs","fragmentByStart","fragmentByEnd","fragments","emptyIndex","flush","f","start","end","t","g","e","p1","p0","dp","ends","fg","concat","unshift","gf","filter","geom","geomsByArc","geoms","polygonsByArc","polygons","components","register","ring","exterior","b","area","cartesianRingArea","coordinates","component","sgn","id","properties","points","reverse","Point","MultiPoint","x","lo","hi","mid","c","Math","abs","define","amd","module","exports"],"mappings":"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","file":"../../libs/topojson.min.js","sourcesContent":["!function() {\n  var topojson = {\n    version: \"1.6.19\",\n    mesh: function(topology) { return object(topology, meshArcs.apply(this, arguments)); },\n    meshArcs: meshArcs,\n    merge: function(topology) { return object(topology, mergeArcs.apply(this, arguments)); },\n    mergeArcs: mergeArcs,\n    feature: featureOrCollection,\n    neighbors: neighbors,\n    presimplify: presimplify\n  };\n\n  function stitchArcs(topology, arcs) {\n    var stitchedArcs = {},\n        fragmentByStart = {},\n        fragmentByEnd = {},\n        fragments = [],\n        emptyIndex = -1;\n\n    // Stitch empty arcs first, since they may be subsumed by other arcs.\n    arcs.forEach(function(i, j) {\n      var arc = topology.arcs[i < 0 ? ~i : i], t;\n      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n      }\n    });\n\n    arcs.forEach(function(i) {\n      var e = ends(i),\n          start = e[0],\n          end = e[1],\n          f, g;\n\n      if (f = fragmentByEnd[start]) {\n        delete fragmentByEnd[f.end];\n        f.push(i);\n        f.end = end;\n        if (g = fragmentByStart[end]) {\n          delete fragmentByStart[g.start];\n          var fg = g === f ? f : f.concat(g);\n          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else if (f = fragmentByStart[end]) {\n        delete fragmentByStart[f.start];\n        f.unshift(i);\n        f.start = start;\n        if (g = fragmentByEnd[start]) {\n          delete fragmentByEnd[g.end];\n          var gf = g === f ? f : g.concat(f);\n          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n        } else {\n          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n        }\n      } else {\n        f = [i];\n        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n      }\n    });\n\n    function ends(i) {\n      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n      else p1 = arc[arc.length - 1];\n      return i < 0 ? [p1, p0] : [p0, p1];\n    }\n\n    function flush(fragmentByEnd, fragmentByStart) {\n      for (var k in fragmentByEnd) {\n        var f = fragmentByEnd[k];\n        delete fragmentByStart[f.start];\n        delete f.start;\n        delete f.end;\n        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n        fragments.push(f);\n      }\n    }\n\n    flush(fragmentByEnd, fragmentByStart);\n    flush(fragmentByStart, fragmentByEnd);\n    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n    return fragments;\n  }\n\n  function meshArcs(topology, o, filter) {\n    var arcs = [];\n\n    if (arguments.length > 1) {\n      var geomsByArc = [],\n          geom;\n\n      function arc(i) {\n        var j = i < 0 ? ~i : i;\n        (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n      }\n\n      function line(arcs) {\n        arcs.forEach(arc);\n      }\n\n      function polygon(arcs) {\n        arcs.forEach(line);\n      }\n\n      function geometry(o) {\n        if (o.type === \"GeometryCollection\") o.geometries.forEach(geometry);\n        else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);\n      }\n\n      var geometryType = {\n        LineString: line,\n        MultiLineString: polygon,\n        Polygon: polygon,\n        MultiPolygon: function(arcs) { arcs.forEach(polygon); }\n      };\n\n      geometry(o);\n\n      geomsByArc.forEach(arguments.length < 3\n          ? function(geoms) { arcs.push(geoms[0].i); }\n          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n    } else {\n      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);\n    }\n\n    return {type: \"MultiLineString\", arcs: stitchArcs(topology, arcs)};\n  }\n\n  function mergeArcs(topology, objects) {\n    var polygonsByArc = {},\n        polygons = [],\n        components = [];\n\n    objects.forEach(function(o) {\n      if (o.type === \"Polygon\") register(o.arcs);\n      else if (o.type === \"MultiPolygon\") o.arcs.forEach(register);\n    });\n\n    function register(polygon) {\n      polygon.forEach(function(ring) {\n        ring.forEach(function(arc) {\n          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n        });\n      });\n      polygons.push(polygon);\n    }\n\n    function exterior(ring) {\n      return cartesianRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]) > 0; // TODO allow spherical?\n    }\n\n    polygons.forEach(function(polygon) {\n      if (!polygon._) {\n        var component = [],\n            neighbors = [polygon];\n        polygon._ = 1;\n        components.push(component);\n        while (polygon = neighbors.pop()) {\n          component.push(polygon);\n          polygon.forEach(function(ring) {\n            ring.forEach(function(arc) {\n              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n                if (!polygon._) {\n                  polygon._ = 1;\n                  neighbors.push(polygon);\n                }\n              });\n            });\n          });\n        }\n      }\n    });\n\n    polygons.forEach(function(polygon) {\n      delete polygon._;\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      arcs: components.map(function(polygons) {\n        var arcs = [];\n\n        // Extract the exterior (unique) arcs.\n        polygons.forEach(function(polygon) {\n          polygon.forEach(function(ring) {\n            ring.forEach(function(arc) {\n              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n                arcs.push(arc);\n              }\n            });\n          });\n        });\n\n        // Stitch the arcs into one or more rings.\n        arcs = stitchArcs(topology, arcs);\n\n        // If more than one ring is returned,\n        // at most one of these rings can be the exterior;\n        // this exterior ring has the same winding order\n        // as any exterior ring in the original polygons.\n        if ((n = arcs.length) > 1) {\n          var sgn = exterior(polygons[0][0]);\n          for (var i = 0, t; i < n; ++i) {\n            if (sgn === exterior(arcs[i])) {\n              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;\n              break;\n            }\n          }\n        }\n\n        return arcs;\n      })\n    };\n  }\n\n  function featureOrCollection(topology, o) {\n    return o.type === \"GeometryCollection\" ? {\n      type: \"FeatureCollection\",\n      features: o.geometries.map(function(o) { return feature(topology, o); })\n    } : feature(topology, o);\n  }\n\n  function feature(topology, o) {\n    var f = {\n      type: \"Feature\",\n      id: o.id,\n      properties: o.properties || {},\n      geometry: object(topology, o)\n    };\n    if (o.id == null) delete f.id;\n    return f;\n  }\n\n  function object(topology, o) {\n    var absolute = transformAbsolute(topology.transform),\n        arcs = topology.arcs;\n\n    function arc(i, points) {\n      if (points.length) points.pop();\n      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {\n        points.push(p = a[k].slice());\n        absolute(p, k);\n      }\n      if (i < 0) reverse(points, n);\n    }\n\n    function point(p) {\n      p = p.slice();\n      absolute(p, 0);\n      return p;\n    }\n\n    function line(arcs) {\n      var points = [];\n      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n      if (points.length < 2) points.push(points[0].slice());\n      return points;\n    }\n\n    function ring(arcs) {\n      var points = line(arcs);\n      while (points.length < 4) points.push(points[0].slice());\n      return points;\n    }\n\n    function polygon(arcs) {\n      return arcs.map(ring);\n    }\n\n    function geometry(o) {\n      var t = o.type;\n      return t === \"GeometryCollection\" ? {type: t, geometries: o.geometries.map(geometry)}\n          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}\n          : null;\n    }\n\n    var geometryType = {\n      Point: function(o) { return point(o.coordinates); },\n      MultiPoint: function(o) { return o.coordinates.map(point); },\n      LineString: function(o) { return line(o.arcs); },\n      MultiLineString: function(o) { return o.arcs.map(line); },\n      Polygon: function(o) { return polygon(o.arcs); },\n      MultiPolygon: function(o) { return o.arcs.map(polygon); }\n    };\n\n    return geometry(o);\n  }\n\n  function reverse(array, n) {\n    var t, j = array.length, i = j - n; while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n  }\n\n  function bisect(a, x) {\n    var lo = 0, hi = a.length;\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (a[mid] < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function neighbors(objects) {\n    var indexesByArc = {}, // arc index -> array of object indexes\n        neighbors = objects.map(function() { return []; });\n\n    function line(arcs, i) {\n      arcs.forEach(function(a) {\n        if (a < 0) a = ~a;\n        var o = indexesByArc[a];\n        if (o) o.push(i);\n        else indexesByArc[a] = [i];\n      });\n    }\n\n    function polygon(arcs, i) {\n      arcs.forEach(function(arc) { line(arc, i); });\n    }\n\n    function geometry(o, i) {\n      if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n    }\n\n    var geometryType = {\n      LineString: line,\n      MultiLineString: polygon,\n      Polygon: polygon,\n      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n    };\n\n    objects.forEach(geometry);\n\n    for (var i in indexesByArc) {\n      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n        for (var k = j + 1; k < m; ++k) {\n          var ij = indexes[j], ik = indexes[k], n;\n          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n        }\n      }\n    }\n\n    return neighbors;\n  }\n\n  function presimplify(topology, triangleArea) {\n    var absolute = transformAbsolute(topology.transform),\n        relative = transformRelative(topology.transform),\n        heap = minAreaHeap();\n\n    if (!triangleArea) triangleArea = cartesianTriangleArea;\n\n    topology.arcs.forEach(function(arc) {\n      var triangles = [],\n          maxArea = 0,\n          triangle;\n\n      // To store each point’s effective area, we create a new array rather than\n      // extending the passed-in point to workaround a Chrome/V8 bug (getting\n      // stuck in smi mode). For midpoints, the initial effective area of\n      // Infinity will be computed in the next step.\n      for (var i = 0, n = arc.length, p; i < n; ++i) {\n        p = arc[i];\n        absolute(arc[i] = [p[0], p[1], Infinity], i);\n      }\n\n      for (var i = 1, n = arc.length - 1; i < n; ++i) {\n        triangle = arc.slice(i - 1, i + 2);\n        triangle[1][2] = triangleArea(triangle);\n        triangles.push(triangle);\n        heap.push(triangle);\n      }\n\n      for (var i = 0, n = triangles.length; i < n; ++i) {\n        triangle = triangles[i];\n        triangle.previous = triangles[i - 1];\n        triangle.next = triangles[i + 1];\n      }\n\n      while (triangle = heap.pop()) {\n        var previous = triangle.previous,\n            next = triangle.next;\n\n        // If the area of the current point is less than that of the previous point\n        // to be eliminated, use the latter's area instead. This ensures that the\n        // current point cannot be eliminated without eliminating previously-\n        // eliminated points.\n        if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;\n        else maxArea = triangle[1][2];\n\n        if (previous) {\n          previous.next = next;\n          previous[2] = triangle[2];\n          update(previous);\n        }\n\n        if (next) {\n          next.previous = previous;\n          next[0] = triangle[0];\n          update(next);\n        }\n      }\n\n      arc.forEach(relative);\n    });\n\n    function update(triangle) {\n      heap.remove(triangle);\n      triangle[1][2] = triangleArea(triangle);\n      heap.push(triangle);\n    }\n\n    return topology;\n  };\n\n  function cartesianRingArea(ring) {\n    var i = -1,\n        n = ring.length,\n        a,\n        b = ring[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = ring[i];\n      area += a[0] * b[1] - a[1] * b[0];\n    }\n\n    return area * .5;\n  }\n\n  function cartesianTriangleArea(triangle) {\n    var a = triangle[0], b = triangle[1], c = triangle[2];\n    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));\n  }\n\n  function compareArea(a, b) {\n    return a[1][2] - b[1][2];\n  }\n\n  function minAreaHeap() {\n    var heap = {},\n        array = [],\n        size = 0;\n\n    heap.push = function(object) {\n      up(array[object._ = size] = object, size++);\n      return size;\n    };\n\n    heap.pop = function() {\n      if (size <= 0) return;\n      var removed = array[0], object;\n      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n      return removed;\n    };\n\n    heap.remove = function(removed) {\n      var i = removed._, object;\n      if (array[i] !== removed) return; // invalid request\n      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n      return i;\n    };\n\n    function up(object, i) {\n      while (i > 0) {\n        var j = ((i + 1) >> 1) - 1,\n            parent = array[j];\n        if (compareArea(object, parent) >= 0) break;\n        array[parent._ = i] = parent;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    function down(object, i) {\n      while (true) {\n        var r = (i + 1) << 1,\n            l = r - 1,\n            j = i,\n            child = array[j];\n        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];\n        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];\n        if (j === i) break;\n        array[child._ = i] = child;\n        array[object._ = i = j] = object;\n      }\n    }\n\n    return heap;\n  }\n\n  function transformAbsolute(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      point[0] = (x0 += point[0]) * kx + dx;\n      point[1] = (y0 += point[1]) * ky + dy;\n    };\n  }\n\n  function transformRelative(transform) {\n    if (!transform) return noop;\n    var x0,\n        y0,\n        kx = transform.scale[0],\n        ky = transform.scale[1],\n        dx = transform.translate[0],\n        dy = transform.translate[1];\n    return function(point, i) {\n      if (!i) x0 = y0 = 0;\n      var x1 = (point[0] - dx) / kx | 0,\n          y1 = (point[1] - dy) / ky | 0;\n      point[0] = x1 - x0;\n      point[1] = y1 - y0;\n      x0 = x1;\n      y0 = y1;\n    };\n  }\n\n  function noop() {}\n\n  if (typeof define === \"function\" && define.amd) define(topojson);\n  else if (typeof module === \"object\" && module.exports) module.exports = topojson;\n  else this.topojson = topojson;\n}();\n"]}